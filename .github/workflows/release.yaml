name: SemVer Release Workflow

run-name: "Releasing ${{ github.event.repository.name }} #${{github.run_number}} -- ${{inputs.modules}}"

# Trigger workflow manually
on:
  workflow_dispatch:
    inputs:
      modules:
       type: choice
       description: Module
       required: true
       options:
        - --SELECT--
        - data-properties
        - tinkar-starter-data-properties
        - tinkar-example-data-properties
      release_version:
        type: string
        description: "(Optional) Custom Release Version"
        required: false
      version_type:
        description: 'Development version type to increment'
        required: true
        default: 'minor'
        type: choice
        options:
          - major
          - minor
          - patch

env:
  BRANCH_NAME: ${{ github.ref_name }}
  TRUNK_BRANCH_NAME: ${{ github.event.repository.default_branch }}
  MODULE: ${{inputs.modules == 'data-properties' && '.' || inputs.modules}}

jobs:
  release:
    name: Release
    runs-on: ubuntu-24.04
    if: github.repository_owner == 'ikmdev'
    defaults:
      run:
       working-directory: ${{env.MODULE}}
    steps:
      - name: Verify Module Selection
        if: inputs.modules == '-- SELECT --'
        run: |
          echo "ERROR: Please pick a correct module from the selection"
          exit 1
          
      - name: Verify Branch
        if: env.BRANCH_NAME != env.TRUNK_BRANCH_NAME
        run: |
          echo "ERROR: Attempting to release from branch ${{ env.BRANCH_NAME }}. Release from ${{ env.TRUNK_BRANCH_NAME }} branch only."
          exit 1

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{secrets.IKMDEVOPS_PAT_TOKEN}}
      
      # - run: pwd; exit 1;

      # - name: Shared Release Action
      #   uses: ikmdev/maven-semver-release-action@v2.3.0
      #   with:
      #     version_type: ${{ github.event.inputs.version_type }}
      #     github_token: ${{secrets.GITHUB_TOKEN}}
      #     release_version: ${{ github.event.inputs.release_version }}

      - name: Configure Version Type
        id: configure_version_type
        shell: bash
        run: |
         if [ $RELEASE_TYPE == 'major' ]; then 
          echo "version_type=0" >> $GITHUB_OUTPUT
         elif [ $RELEASE_TYPE == 'minor' ]; then
          echo "version_type=1" >> $GITHUB_OUTPUT
         elif [ $RELEASE_TYPE == 'patch' ]; then
          echo "version_type=2" >> $GITHUB_OUTPUT
         elif [ $RELEASE_TYPE == 'pre-release' ]; then
          echo "version_type=3" >> $GITHUB_OUTPUT
         else
          echo "ERROR: Invalid version_type '${{ inputs.version_type }}'."
          exit 1
         fi
        env:
          RELEASE_TYPE: ${{inputs.version_type}}


      - name: Setup Git User
        run: |
          git config user.name "ikmdevops"
          git config user.email "devops@ikm.dev"


      - name: GitFlow Release
        id: gitflow_release
        run: |
          ./mvnw gitflow:release \
                --batch-mode \
                -X \
                -Dverbose=true \
                -DreleaseVersion=${{ inputs.release_version }} \
                -DversionDigitToIncrement=${{ steps.configure_version_type.outputs.version_type }} \
                -DdevelopmentVersion=${{ inputs.development_version }} \
                -DpostReleaseGoals="clean install \
                      --batch-mode \
                      -e \
                      -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                      -PcodeQuality,release-enforcement \
                      -PgenerateData \
                      -Dmaven.build.cache.enabled=false \