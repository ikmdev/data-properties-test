name: Publish Properties

run-name: Publish Properties -- ${{github.head_ref || github.ref_name}} -- ${{inputs.modules}}

on:
    workflow_dispatch:
        inputs:
            modules:
                type: choice
                description: Module
                required: true
                options:
                    - --SELECT--
                    - data-properties
                    - tinkar-starter-data-properties
                    - tinkar-example-data-properties

env:
    MODULE: ${{inputs.modules == 'data-properties' && '.' || inputs.modules}}
    IS_TAG: ${{contains(github.ref_type, 'tag')}}

jobs:
    tag_selection_verification:
      name: Tag Selection Verification
      runs-on: ubuntu-24.04
      steps:
        - name: Fail if -- SELECT --
          if: env.MODULE == '-- SELECT --'
          run: |
            echo "::error::ERROR: Please pick a correct module from the selection"
            exit 1

        - name: Is Tag
          if: env.IS_TAG == 'true'
          run: |
            IFS="-v"
            read -ra arr <<< "$TAG"
            echo "Head Ref: ${{github.head_ref}}
            echo "Ref Name: ${{github.ref_name}}
            echo "TAG: $TAG"
            echo "${arr[0]}"g
            VAL="${arr[0]}"
            echo $VAL
            exit 1;
          env:
            TAG: ${{github.ref_name}}


    publish-properties:
        name: Publish Properties
        needs: tag_selection_verification
        runs-on: ubuntu-24.04
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
              
            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                distribution: 'zulu'
                java-version: '23'
                server-id: ossrh
                server-username: MAVEN_USERNAME
                server-password: MAVEN_CENTRAL_TOKEN
                gpg-private-key: ${{secrets.GPG_KEY}}
                gpg-passphrase: MAVEN_GPG_PASSPHRASE

            - name: Version Verification
              id: version_verification
              run: |
                 echo CURRENT_VERSION=$(mvn help:evaluate -D'expression=project.version' -q -D'forceStdout') >> $GITHUB_OUTPUT
                 if [[ "$CURRENT_VERSION" == *"SNAPSHOT"* ]]; then
                    echo "NEXUS_REPO_ID=maven-snapshots">> $GITHUB_OUTPUT
                    echo "RELEASE_ENFORCEMENT=" >> $GITHUB_OUTPUT
                  else
                    echo "NEXUS_REPO_ID=maven-releases">> $GITHUB_OUTPUT
                    echo "RELEASE_ENFORCEMENT=-Prelease-enforcement" >> $GITHUB_OUTPUT
                 fi
              working-directory: ${{env.MODULE}}

            
            - name: Maven Settings File
              uses: whelk-io/maven-settings-xml-action@v22
              with:
                 servers: '[{"id": "${{ steps.version_verification.outputs.NEXUS_REPO_ID }}", "username": "admin", "password": "${{secrets.EC2_NEXUS_PASSWORD}}"}]'
                 profiles: '[{"id": "nexus-profile", "properties": {"altDeploymentRepository": "${{  steps.version_verification.outputs.NEXUS_REPO_ID  }}::https://nexus.tinkarbuild.com/repository/${{ steps.version_verification.outputs.NEXUS_REPO_ID }}"}}]'
                 active_profiles: '["nexus-profile"]' 
                 output_file: .m2/settings.xml
         
            - name: Maven Build
              run: |
                    mvn clean install\
                      --batch-mode \
                      -U \
                      -e \
                      -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                      -Dmaven.build.cache.enabled=false \
                      -PcodeQuality \
                      -PgenerateData \
                      ${{  steps.version_verification.outputs.RELEASE_ENFORCEMENT  }} \
                      # ${{ inputs.mvn_additional_args }}
              working-directory: ${{env.MODULE}}

            - name: Deploy To Nexus
              run: |
                    mvn deploy \
                        --batch-mode \
                        -U \
                        -e \
                        -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                        -DskipTests \
                        -DskipITs \
                        -s '/home/runner/work/${{github.event.repository.name}}/${{github.event.repository.name}}/.m2/settings.xml'\
                        -DrepositoryId='${{ steps.version_verification.outputs.NEXUS_REPO_ID  }}' \
                        #  ${{ inputs.mvn_additional_args }}
              working-directory: ${{env.MODULE}}

            - name: Publish To OSSRH (Maven Central Staging)
              shell: bash
              if: env.IS_TAG == 'true'
              run: |
                     mvn deploy \
                        --batch-mode \
                        -e \
                        -U \
                        -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                        -DskipTests \
                        -DskipITs \
                        -Dmaven.main.skip \
                        -Dmaven.test.skip \
                        -DrepositoryId=ossrh \
                        -DrepositoryIdOSSRH='true' \
                        -PstageOSSRH \
                        -Dmaven.build.cache.enabled=false \
                          # ${{ inputs.mvn_additional_args }}
              env:
                 MAVEN_USERNAME: ${{secrets.OSSRH_TOKEN_USER}}
                 MAVEN_CENTRAL_TOKEN: ${{secrets.OSSRH_TOKEN_PASS}}
                 MAVEN_GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}
              working-directory: ${{env.MODULE}}

